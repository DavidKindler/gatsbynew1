// ---------------------------------------------------------------------------
// Media Object Component(s)
// :: Bootstrap 3.3.7 Base Media
// :: Flex-Media component
// ---------------------------------------------------------------------------

// Bootstrap Base Media
// ----------------------------------------
.media {
  // Proper spacing between instances of .media
  margin-top: 15px;

  &:first-child {
    margin-top: 0;
  }
}

.media,
.media-body {
  zoom: 1;
  overflow: hidden;
}

.media-body {
  width: 10000px;
}

.media-object {
  display: block;

  // Fix collapse in webkit from max-width: 100% and display: table-cell.
  &.img-thumbnail {
    max-width: none;
  }
}

.media-right,
.media > .pull-right {
  padding-left: 10px;
}

.media-left,
.media > .pull-left {
  padding-right: 10px;
}

.media-left,
.media-right,
.media-body {
  display: table-cell;
  vertical-align: top;
}

.media-middle {
  vertical-align: middle;
}

.media-bottom {
  vertical-align: bottom;
}

// Reset margins on headings for tighter default spacing
.media-heading {
  margin-top: 0;
  margin-bottom: 5px;
}

// Media list variation
//
// Undo default ul/ol styles
.media-list {
  padding-left: 0;
  list-style: none;
}

// // Flex Media Component
// // ----------------------------------------
//
// // main container
// .media-flex {
//   padding-top: $padding-base-vertical;
//   padding-bottom: $padding-base-vertical;
//   // top section above list, contains header and intro text
//   &-header {
//     margin-bottom: $padding-base-vertical;
//   }
//
//   &-title { }
//
//   &-description {
//     p { }
//     ul { } // keep standard list styles, no larger font size like paragraph?
//     // etc
//
//     :last-child {
//       margin-bottom: 0;
//     }
//   }
//
//   // list container
//   &-list {
//     @include list-unstyled;
//     margin-right: -$grid-gutter-width-half;
//     margin-bottom: $padding-large-vertical; // in case of sybling lists, increase space as if standard spacing above and below was applied (only it is on bottom and removed from last item).
//     margin-left: -$grid-gutter-width-half;
//
//     // set bottom margin in case you stack lists inside one container, and remove final items bottom margin
//     &:last-of-type {
//       margin-bottom: 0;
//     }
//   }
//
//   // individual items, can be li if in a list, or div, etc.
//   &-item {
//     display: flex;
//     flex-flow: row wrap;
//
//     // nested media-items, provides spacing between
//     & & {
//       margin-top: $padding-base-vertical-smaller;
//     }
//
//     &.is-single {
//       align-items: center;
//       margin-right: -$grid-gutter-width-half;
//       margin-left: -$grid-gutter-width-half;
//     }
//
//     .media-flex-list & {
//       margin-bottom: $padding-base-vertical-smaller;
//     }
//
//     &:last-of-type {
//       margin-bottom: 0;
//     }
//
//     @include breakpoint-max($screen-sm) {
//       flex-direction: column;
//
//       > * {
//         margin-bottom: 1em;
//
//         &:last-child {
//           margin-bottom: 0;
//         }
//       }
//     }
//   }
//
//   &-media {
//     order: 0;
//     flex-grow: 0;
//     flex-shrink: 1;
//     flex-basis: auto;
//     max-width: 30%;
//     padding-left: $grid-gutter-width-half;
//     padding-right: $grid-gutter-width-half;
//
//     @include breakpoint-max($screen-sm) {
//       align-self: center;
//       max-width: 50%;
//     }
//
//     img,
//     svg { }
//   }
//
//   &-body {
//     order: 0;
//     flex-grow: 2;
//     flex-shrink: 1;
//     flex-basis: auto; // ie11 needs auto set for proper height display
//     max-width: 100%; // ie11 fix
//     padding-left: $grid-gutter-width-half;
//     padding-right: $grid-gutter-width-half;
//
//     :last-child {
//       margin-bottom: 0;
//     }
//
//     @include breakpoint($screen-sm) {
//       flex-basis: 0; // need 0 set so that image is on same row, auto pushes text to wrap
//     }
//   }
//
//   &-heading {
//     .is-single & {
//        // same as .h2 styling (increases font size)
//     }
//   }
//
//   &-text {
//     .is-single & {
//     }
//
//     // if single cta is place after text, add cta style and spacing above
//     + a {
//       @include cta;
//       display: inline-block;
//       margin-top: 1em;
//     }
//   }
//
//   &-links {
//     @include list-unstyled;
//     margin-top: 1em; // if present, provide space between text and links
//
//     a {
//       @include cta;
//     }
//   }
//
//
//   // Modifiers, to be used on either the -media or -body elements for layout
//   // ----------------------------------------
//   // all changes applied after mobile screens
//
//   @include breakpoint($screen-sm) {
//     // layout
//     .is-top {
//       order: -4;
//       flex-basis: auto;
//       width: 100%;
//       max-width: 100%;
//       margin-bottom: 15px;
//     }
//
//     .is-bottom {
//       order: 4;
//       flex-basis: auto;
//       width: 100%;
//       max-width: 100%;
//       margin-top: 15px;
//     }
//
//     .is-left {
//       order: -1;
//       margin-right: auto;
//     }
//
//     // removing middle for now, not working properly and three items would be outside of the normal use for this component. May add back in the future, but needs to be thought out more.
//     // .is-middle {
//     //   order: 0;
//     //   margin-right: auto;
//     //   margin-left: auto;
//     // }
//
//     .is-right {
//       order: 1;
//       margin-left: auto;
//     }
//
//     // Alignment
//     .is-align-top    { align-self: top; }
//     .is-align-center { align-self: center; }
//     .is-align-bottom { align-self: flex-end; }
//     .is-align-start  { align-self: flex-start; }
//     .is-align-end    { align-self: flex-end; }
//   }
// }

// Flex Media Component
// ----------------------------------------

// main container
.media-flex {
  padding-top: 50px;
  padding-bottom: 50px;
  // top section above list, contains header and intro text
  &-header {
    margin-bottom: 35px;
  }

  &-title {
  }

  &-description {
    p {
      // keep standard paragrph styles
    }

    ul {
      // keep standard list styles, no larger font size like paragraph?
    }

    :last-child {
      margin-bottom: 0;
    }
  }

  // list container
  &-list {
    @include nobullets;
    margin-right: -$grid-gutter-width-half;
    // margin-bottom: $padding-component-large-vertical; // in case of sybling lists, increase space as if standard spacing above and below was applied (only it is on bottom and removed from last item).
    margin-left: -$grid-gutter-width-half;

    // set bottom margin in case you stack lists inside one container, and remove final items bottom margin
    &:last-of-type {
      // margin-bottom: 0;
    }

    // provide common spacing between stacked lists, commenting out bottom margin above and adding it to margin-top here instead
    & + & {
      margin-top: 50px;
    }
  }

  // individual items, can be li if in a list, or div, etc.
  &-item {
    display: flex;
    flex-flow: row wrap;

    // nested media-items, provides spacing between
    & & {
      margin-top: 35px;
    }

    &.is-single {
      align-items: center;
      margin-right: -$grid-gutter-width-half;
      margin-left: -$grid-gutter-width-half;

      // Is Inverse only applies to single items
      // if is-inverse should apply to single list items, need to apply more styles
      &.is-inverse {
        // add additional padding top/bottom and set default background color
        // use bg-color utility classes for additional background colors
        // padding-top: $grid-gutter-width;
        // padding-bottom: $grid-gutter-width;
        padding: 35px $grid-gutter-width-half;
        background-color: $brand-primary;
        // remove negative horiz margins when single
        margin-right: 0;
        margin-left: 0;
      }
    }

    .media-flex-list & {
      margin-bottom: 35px;
    }

    .has-borders & {
      padding-top: 35px;
      padding-bottom: 35px;
      margin-bottom: 0;
      border-top: 1px solid #e4e4e6;
    }

    .media-flex-header + .has-borders > & {
      &:first-child {
        padding-top: 0;
        border-top: none;
      }
    }

    &:last-of-type {
      margin-bottom: 0;
    }

    @include breakpoint-max($screen-sm) {
      flex-direction: column;

      > * {
        margin-bottom: 1em;

        &:last-child {
          margin-bottom: 0;
        }
      }
    }
  }

  &-media {
    order: 0;
    flex-grow: 0;
    flex-shrink: 1;
    flex-basis: auto;
    max-width: 30%;
    padding-left: $grid-gutter-width-half;
    padding-right: $grid-gutter-width-half;

    @include breakpoint-max($screen-sm) {
      align-self: center;
      max-width: 50%;
    }

    img,
    svg {
    }
  }

  &-body {
    order: 0;
    flex-grow: 2;
    flex-shrink: 1;
    flex-basis: auto; // ie11 needs auto set for proper height display
    max-width: 100%; // ie11 fix
    padding-left: $grid-gutter-width-half;
    padding-right: $grid-gutter-width-half;

    > :last-child {
      margin-bottom: 0;
    }

    @include breakpoint($screen-sm) {
      flex-basis: 0; // need 0 set so that image is on same row, auto pushes text to wrap
    }
  }

  &-heading {
    margin-top: 0;

    .is-single & {
      // @include qc-h4-semibold; // same as .h2 styling (increases font size)
    }

    .is-single.is-inverse & {
      color: $white;
    }
  }

  &-text {
    .is-single & {
      // @include qc-body-copy;
    }

    .is-single.is-inverse & {
      color: $white;
    }

    // if single cta is place after text, add cta style and spacing above
    + a {
      @include cta;
      display: inline-block;
      margin-top: 1em;
    }
  }

  &-links {
    @include list-unstyled;
    margin-top: 1em; // if present, provide space between text and links

    a {
      @include cta;

      .is-single.is-inverse & {
        color: $white;
      }
    }
  }

  // Modifiers, to be used on either the -media or -body elements for layout
  // ----------------------------------------
  // all changes applied after mobile screens

  &-item {
    @include breakpoint($screen-sm) {
      // layout
      .is-top {
        order: -4;
        flex-basis: auto;
        width: 100%;
        max-width: 100%;
        margin-bottom: 15px;
      }

      .is-bottom {
        order: 4;
        flex-basis: auto;
        width: 100%;
        max-width: 100%;
        margin-top: 15px;
      }

      .is-left {
        order: -1;
        margin-right: auto;
      }

      // removing middle for now, not working properly and three items would be outside of the normal use for this component. May add back in the future, but needs to be thought out more.
      // .is-middle {
      //   order: 0;
      //   margin-right: auto;
      //   margin-left: auto;
      // }

      .is-right {
        order: 1;
        margin-left: auto;
      }

      // Alignment
      .is-align-top {
        align-self: top;
      }
      .is-align-center {
        align-self: center;
      }
      .is-align-bottom {
        align-self: flex-end;
      }
      .is-align-start {
        align-self: flex-start;
      }
      .is-align-end {
        align-self: flex-end;
      }
    }
  }
}
