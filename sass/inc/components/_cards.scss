// ---------------------------------------------------------------------------
// Card Components
// :: Card 1
// :: Card 2
// ---------------------------------------------------------------------------
.card1 {
  padding-top: $padding-component-base-vertical;
  padding-bottom: $padding-component-base-vertical;

  &-list {
    margin-right: -#{$grid-gutter-width-half};
    margin-left: -#{$grid-gutter-width-half};

    @include breakpoint($screen-md) {
      display: flex;
      flex-flow: row wrap;

      .has-one & {
        justify-content: center;
      }
    }
  }

  &-column {
    // display: flex;
    // flex-direction: column;
    padding-right: $grid-gutter-width-half;
    padding-left: $grid-gutter-width-half;
    margin-top: $padding-component-small-vertical;

    &:first-of-type {
      margin-top: 0;
    }

    @include breakpoint($screen-md) {
      width: 50%;

      .has-one {
        // single specific styles go here
      }

      .has-two & {
        // default styles
        &:nth-of-type(-n + 2) {
          margin-top: 0;
        }
      }

      .has-three & {
        width: (100% / 3);

        &:nth-of-type(-n + 3) {
          margin-top: 0;
        }
      }
    }
  }

  &-item {
    min-height: 100%;
    padding: 20px;
    background: {
      // image: ;
      position: center center;
      repeat: no-repeat;
      size: cover;
      color: $body-bg;
    }
    border: 1px solid $border-color-base;

    @include breakpoint($screen-md) {
      padding: 40px;

      .is-tertiary & {
        padding: 20px; // decrease padding since the cards aren't as wide
      }
    }
  }

  &-image {
    margin-bottom: 20px;

    @include breakpoint($screen-md) {
      &:not(.is-tertiary) {
        // neg margins are a little 'hacky', but easier than adding another wrapper div for content to change padding values. TO DO: re-assess this?
        margin-top: -20px;
        margin-right: -20px;
        margin-left: -20px;
      }
    }
  }

  &-header {
    // header styles
  }

  &-title {
    margin-top: 0;
    // mirror h1 style
    font-size: 1.953em;
    font-weight: $font-weight-heavy;

    .is-primary & {
      // default styles, uses qc-h1-standard mentioned above
    }

    .is-secondary & {
      font-size: 1.35em;
      font-weight: $font-weight-heavy;
    }

    .is-tertiary & {
      font-size: 1.15em;
      font-weight: $font-weight-heavy;
    }
  }

  &-subtitle {
    margin-top: 0;
  }

  &-body {
    > :last-child {
      margin-bottom: 0;
    }
  }

  &-links {
    @include list-unstyled;
    @include nobullets;
    margin-top: 1em;
    margin-bottom: 0;

    :last-child {
      margin-bottom: 0;
    }
  }

  &-link {
    @include cta;
  }

  &-footer {
    padding-top: $padding-component-small-vertical;
    margin-top: $padding-component-small-vertical;
    // border-top: 1px solid $border-color-base; // comment out, but leaving in place. I think it's a good idea but not done in past
  }
}

// IE11 hack: IE wasn't respecting the max-width set on .media-flex-media
// This media query targets IE browser only, and limits the image sizing.
// http://browserhacks.com/#hack-a1cb5e7ad258ad5ed8bbaac04b701415
// Not ideal, TO DO: find a better solution
@media screen and (min-width: 0\0) {
  .card1-item .media-flex-media img,
  .card2-item .media-flex-media img {
    max-width: 140px;
  }
}

// another IE11 hack option
// https://paper-leaf.com/blog/2014/09/targeting-ie-10-11-browsers-css/
// @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {
//   /* IE10+ specific styles go here */
// }

// Card 2
// ---------------------------------------------------------------------------
//

.card2 {
  padding: $padding-component-base-vertical $grid-gutter-width-half;

  // remove bottom padding if used with Card 1
  .card1 & {
    padding-bottom: 0;
  }

  &-list {
    margin-left: -#{$grid-gutter-width-half};
    margin-right: -#{$grid-gutter-width-half};
    background-color: $white;
    border: 1px solid $border-color-base;

    // add space between if stacking multiple items
    & + & {
      margin-top: $padding-component-small-vertical;
    }

    @include breakpoint($screen-md) {
      display: flex;
      flex-flow: row wrap;
    }
  }

  &-column {
    flex-grow: 1;
    padding: 20px;

    @include breakpoint($screen-md) {
      width: 50%;
    }

    &.is-full {
      @include breakpoint($screen-md) {
        order: -1; // move item above all others (default is 0)
        width: 100%; // make span full-width
      }
    }

    // modifier isn't documented, need to keep? check with UX/Branding
    .has-divider & {
      border-right: 1px solid $border-color-base;
    }
  }

  &-item {
    min-height: 100%;
    padding-top: 20px;
    padding-bottom: 20px;

    @include breakpoint($screen-md) {
      padding: 40px 30px 30px;
    }

    // modifier isn't documented, need to keep? check with UX/Branding
    .has-borders & {
      border: 1px solid $border-color-base;
    }
  }
}
